@model CIOS.Models.CSPersonnel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>CSPersonnel</legend>

        @Html.HiddenFor(model => model.csPersonnelId)
        @Html.HiddenFor(model => model.lastAccess)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.UserProfile.UserName)
        @Html.HiddenFor(model => Model.UserProfile.UserId)

        <div class="editor-label">
            @Html.LabelFor(model => model.UserProfile.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserProfile.Email)
            @Html.ValidationMessageFor(model => model.UserProfile.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.firstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.firstName)
            @Html.ValidationMessageFor(model => model.firstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.middleName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.middleName)
            @Html.ValidationMessageFor(model => model.middleName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.lastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.lastName)
            @Html.ValidationMessageFor(model => model.lastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.isActive)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.isActive)
            @Html.ValidationMessageFor(model => model.isActive)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
